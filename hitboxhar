wait(0.2)

-- Load Rayfield
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

-- Create window
local Window = Rayfield:CreateWindow({
    Name = "Hitboxhar",
    Icon = 93973861464448,
    Theme = "Blood",
    ToggleUIKeybind = "K",
    ConfigurationSaving = {Enabled = true, FileName = "Big Hub"}
})

-- Player tab
local PlayerTab = Window:CreateTab("Player", 4483362458)

-- Extended Hitbox variables
local extendedHitboxEnabled = false
local extendedHitboxConnection = nil
local HITBOX_RADIUS = 15
local EXTENDED_KEY = Enum.KeyCode.Zero -- keybind = 0
local hitboxSpheres = {} -- store spheres for each player

-- Functions to show/hide spheres
local function showHitbox(hrp)
    if hitboxSpheres[hrp] then return end
    local sphere = Instance.new("SphereHandleAdornment")
    sphere.Adornee = hrp
    sphere.Radius = HITBOX_RADIUS
    sphere.Color3 = Color3.fromRGB(255, 0, 0)
    sphere.Transparency = 0.4
    sphere.AlwaysOnTop = true
    sphere.ZIndex = 5
    sphere.Parent = game.CoreGui
    hitboxSpheres[hrp] = sphere

    hrp.AncestryChanged:Connect(function(_, parent)
        if not parent and hitboxSpheres[hrp] then
            hitboxSpheres[hrp]:Destroy()
            hitboxSpheres[hrp] = nil
        end
    end)
end

local function hideAllHitboxes()
    for _, sphere in pairs(hitboxSpheres) do
        sphere:Destroy()
    end
    hitboxSpheres = {}
end

-- Toggle for Extended Hitbox
local ExtendedHitboxToggle = PlayerTab:CreateToggle({
    Name = "Extended Hitbox",
    CurrentValue = false,
    Flag = "ExtendedHitbox_Toggle",
    Callback = function(enabled)
        extendedHitboxEnabled = enabled

        if extendedHitboxConnection then
            extendedHitboxConnection:Disconnect()
            extendedHitboxConnection = nil
        end

        if extendedHitboxEnabled then
            extendedHitboxConnection = RunService.Heartbeat:Connect(function()
                for _, otherPlayer in ipairs(Players:GetPlayers()) do
                    if otherPlayer ~= player and otherPlayer.Character then
                        local hrp = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
                        if hrp then
                            showHitbox(hrp)
                        end
                    end
                end
            end)
        else
            hideAllHitboxes()
        end
    end
})

-- Keybind to toggle Extended Hitbox
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == EXTENDED_KEY then
        extendedHitboxEnabled = not extendedHitboxEnabled
        ExtendedHitboxToggle:Set(extendedHitboxEnabled)
    end
end)
